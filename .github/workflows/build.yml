name: Build APKs
on:
  workflow_dispatch:
  #schedule: [{cron: "0 0 * * 0"}]

jobs:
  build:
    permissions: write-all
    runs-on: ubuntu-latest
    steps:
      - name: Set up Java
        uses: actions/setup-java@v5
        with:
          distribution: "temurin"
          java-version: "21"

      - name: Checkout repository
        uses: actions/checkout@v5
        with:
          fetch-depth: 0
          submodules: true

      - name: Cache build artifacts
        uses: actions/cache@v4
        id: build_cache
        with:
          path: |
            bin/apksigner.jar
            bin/aapt2/aapt2-arm64
          key: ${{ runner.os }}-full-build-${{ hashFiles('config.toml') }}-${{ hashFiles('utils.sh') }}
          restore-keys: |
            ${{ runner.os }}-full-build-${{ hashFiles('config.toml') }}-
            ${{ runner.os }}-full-build-

      - name: Build APKs
        continue-on-error: true
        run: |
          chmod +x build.sh utils.sh && ./build.sh config.toml
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GITHUB_REPOSITORY: $GITHUB_REPOSITORY
          NEXT_VER_CODE: ${{ steps.next_ver_code.outputs.NEXT_VER_CODE }}

      - name: Upload build artifacts
        uses: actions/upload-artifact@v5
        with:
          name: build-artifacts
          path: ./build/

      - name: Get output
        id: get_output
        run: |
          echo "DATE=$(date +%y.%m.%d)" >> "$GITHUB_OUTPUT"
          DELIM="$(openssl rand -hex 8)"
          echo "BUILD_LOG<<${DELIM}" >> "$GITHUB_OUTPUT"
          cat build.md >> "$GITHUB_OUTPUT"
          echo "${DELIM}" >> "$GITHUB_OUTPUT"

      - name: Upload APKs to release
        uses: svenstaro/upload-release-action@v2
        with:
          body: ${{ steps.get_output.outputs.BUILD_LOG }}
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: ./build/*
          release_name: ${{ steps.get_output.outputs.DATE }}
          tag: ${{ steps.get_output.outputs.DATE }}
          file_glob: true
          overwrite: true
